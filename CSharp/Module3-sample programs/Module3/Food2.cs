/*
 * Project:         Module 3
 * Date:            September 2018
 * Developed By:    LV
 * Class Name:      Food2
 * Purpose:         Demos auto-implemented properties, constructor
*/
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Module3
{
    class Food2
    {
        #region "Properties"

        // you can create an auto-implemented property if the get accessor will simply return the value of the corresponding instance variable/field and the set accessor will simply assign a value to the instance variable/field 
        // you should not declare the "backing" variable/field corresponding to a property when it is auto-implemented
        // the corresponding backing variable/field is automatically-generated by the compiler

        public string FoodName { get; set; }
        public int FatGrams { get; set; }
        public int CarbGrams { get; set; }
        public int ProteinGrams { get; set; }

        #endregion

        #region "Constructors"

        // a constructor is a method that instantiates an object
        // if you do not explicitly write a constructor for a class, that class is automatically provided a constructor
        // this auto-generated constructor does not have parameters
        // a constructor without parameters is the class's default constructor
        // you can write your own constructor(s) to perform additional tasks when an object of your class is instantiated
        
        public Food2 (string foodName, int fatGrams, int carbGrams, int proteinGrams)
        {
            // the parameters are used to initialize the properties of a newly created Food2 object

            FoodName = foodName;
            FatGrams = fatGrams;
            CarbGrams = carbGrams;
            ProteinGrams = proteinGrams;
        }

        // you can write multiple constructors (with the same name; but with a different set of parameters for each) 
        // this capability is called overloading - see below

        // another constructor with no parameters (i.e., default constructor)

        public Food2() { }

        #endregion

        #region "Methods"

        // an instance method to calculate and return the calories for the food object

        public int CalculateCalories()
        {
            // constants and variable

            const int fatCaloriesPerGram = 9;
            const int carbAndProteinCaloriesPerGram = 4;

            int calories;

            // calculate calories

            calories = (FatGrams * fatCaloriesPerGram) + ((CarbGrams + ProteinGrams) * carbAndProteinCaloriesPerGram);

            // return calories

            return calories;
        }

        #endregion
    }
}
